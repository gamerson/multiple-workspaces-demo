import groovy.util.slurpersupport.GPathResult;

repositories {
	mavenLocal()
}

configurations {
	distBoms	
	distArtifacts
}

dependencies {
	distBoms group: "com.test", name: "one", version: "1.0.0-SNAPSHOT", ext: "pom"
	distBoms group: "com.test", name: "two", version: "1.0.0-SNAPSHOT", ext: "pom"
}

tasks.named("distBundle") {
	doLast  {
		Set<File> bomFiles = configurations.distBoms.resolve();
		
		bomFiles.each {
			XmlSlurper xmlSlurper = new XmlSlurper();

			GPathResult gPathResult = xmlSlurper.parse(it);

			gPathResult = (GPathResult)gPathResult.getProperty(
				"dependencyManagement");

			gPathResult = (GPathResult)gPathResult.getProperty(
				"dependencies");

			gPathResult = (GPathResult)gPathResult.getProperty(
				"dependency");

			Iterator<?> iterator = gPathResult.iterator();

			while (iterator.hasNext()) {
				gPathResult = (GPathResult)iterator.next();

				StringBuilder sb = new StringBuilder();

				sb.append(gPathResult.getProperty("groupId"));
				sb.append(':');
				sb.append(gPathResult.getProperty("artifactId"));
				sb.append(':');
				sb.append(gPathResult.getProperty("version"));

				dependencies {
					distArtifacts sb.toString()
				}
			}
		}
		
		def resolvedArtifacts = configurations.distArtifacts.resolvedConfiguration.resolvedArtifacts
		
		resolvedArtifacts.findAll { it.file.name.endsWith(".jar") }.each { artifact ->
			project.copy {
				from artifact.file
				into new File(distBundle.destinationDir, "/osgi/modules")
				rename { "${artifact.name}.${artifact.extension}" }
			}
		}

		resolvedArtifacts.findAll { it.file.name.endsWith(".war") }.each { artifact ->
			project.copy {
				from artifact.file
				into new File(distBundle.destinationDir, "/osgi/war")
				rename { "${artifact.name}.${artifact.extension}" }
			}
		}
	}
}